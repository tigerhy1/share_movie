看到两个比较大的改进的地方:

1. Model不应该分成两种

2. 像Http请求这样的函数可以写的通用性较高.

下一步的改进:

1. css

2. list和add做成两个模块

下一步改进：

不用bootstrap,看用最基本的东西怎么达到效果。

<meta name="viewport" content="width=device-width, initial-scale=1.0">

这句话很有用呀

对输入为空的处理.

2016-07-09

把share_list再调好看一些.

2016-07-10

界面调到了一个基本满意的状态，
下午开始做数据, 计划用clojure.

后端clojure的本地测试走通了，可以先用着开发。
之后可以看下lein-ring

下一步要考虑后端数据和接口的事情了。

要去直接用clojure调用couchbase的java sdk

2016-07-25

为了接后端，需要http请求, 复习command和task

command: 做一些有side effect的事情.

task: 异步操作，能成功，也可能失败.

我的理解是command能包裹task.task是更具体的事情.

前后端对接的时候，涉及到一个字段要对上的问题。决定从前端改字段，数据遵循后端设计这样比较好。

下一次的任务是好好把跨域给理解一下。

2016-07-27

在调试的时候发现，elm貌似没有什么好的console.log的方式来调试。要留意一下好的调试方式.

下一步是调通add-share

界面add-share，不要直接跳回到列表,还是报一下添加成功.

跑倒是跑通了，但是得到结果之后的行为:留在addShare的那个页面的行为，还没弄出来.
(好像是要弄navigation, 又感觉不是navigation的问题，是fetch到的结果的问题)

google下: elm How to debug

bug: get-share , size大的话,结果会爆



